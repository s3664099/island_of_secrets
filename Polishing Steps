default
  - *Start
  - *Main
command_process
  - *ActionResult
  - *CommandExecutor
  - *CommandParser
  - *CommandProcessor
  - *CommandValidator
  - *ParsedCommand  
commands
  - *Combat
  - *Consume
  - *Examine
  - *ItemCommands
  - *Miscellaneous
  - *Move
controller
  - *BookButton
  - *CommandButton
  - *CommandListener
  - *GameButton
  - *MapButton
  - *MapController
  - *QuitButton
  - *SearchGameButton
  - *ShelterButton
data
  - Constants
  - GameEntities
  - Item
  - Location
  - RawData
game
  - Game
  - *GameEngine
  - *GameInitialiser
  - *MessageBuilder
  - *Player
  - *RandomExitHandler
  - *SpecialExitHandler
  - *SpecialItemHandler
  - *PostCommand
  - *Swimming
  - *SwimmingHandler
interfaces
  - GameCommandHandler
  - GameStateProvider
  - GameUI
  - GameView
persistence
  - *Persistence
ui
  - GameState
  - *GameController
view
  - *CommandPanel
  - *GameFrame
  - *GamePanel
  - LightningPanel
  - *MainGamePanel
  - *MapPanel
  - *MessagePanel
  - *RoomPanel
  - *StatusPanel
  

**** Test the special items that the rules in SpecialItemHandler work
**** Make sure the special exits are correct

- Give when subject not present - it is refused, should respond otherwise
- See Below for issue with Trapdoor
- HandleGoTrapdoor looks odd in CommandValidator
- Game does not end if go boat
Redo the Panels




















TRAPDOOR ISSUE IDENTIFIED:
Operator Precedence Bug ⚠️

return (command.getCodedCommand().equals(GameEntities.CODE_DOWN_TRAPDOOR) ||
        command.getCodedCommand().equals(GameEntities.CODE_ENTER_TRAPDOOR) &&
        (game.getItem(GameEntities.ITEM_TRAPDOOR).getItemFlag()==1));


Because && binds more tightly than ||, this is evaluated as:

(CODE_DOWN_TRAPDOOR) || (CODE_ENTER_TRAPDOOR && trapdoorClosed)


which is not what you intend. You want parentheses around the ||:

return (command.getCodedCommand().equals(GameEntities.CODE_DOWN_TRAPDOOR) ||
        command.getCodedCommand().equals(GameEntities.CODE_ENTER_TRAPDOOR)) &&
        game.getItem(GameEntities.ITEM_TRAPDOOR).getItemFlag() == 1;


Same issue in checkGoTrapdoorOpen.

