/*
Title: Island of Secrets Quit Button
Author: Jenny Tyler & Les Howarth
Translator: David Sarkies
Version: 4.6
Date: 18 September 2025
Source: https://archive.org/details/island-of-secrets_202303
*/

package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * A button action listener that quits or restarts the game when triggered.
 * <p>
 * When the user activates the button, this listener decides whether to
 * restart the game or close the UI entirely based on the {@code shouldRestart}
 * flag provided at construction time.
 * </p>
 */
public class QuitButton implements ActionListener {
	
    /** Reference to the main game controller for managing game lifecycle actions. */
	private final GameController controller;
	
    /**
     * Indicates whether the game should restart after the quit action.
     * If {@code true}, the game restarts; if {@code false}, the UI closes.
     */
	private final boolean shouldRestart;
	
    /**
     * Constructs a {@code QuitButton} listener.
     *
     * @param controller    the {@link GameController} responsible for handling
     *                      restart or shutdown operations; must not be {@code null}.
     * @param shouldRestart {@code true} to restart the game on quit,
     *                      {@code false} to simply close the UI.
     * @throws NullPointerException if {@code controller} is {@code null}.
     */
	public QuitButton(GameController controller,boolean shouldRestart) {
		this.controller = Objects.requireNonNull(controller,"GameController cannot be null");
		this.shouldRestart = shouldRestart;
	}
	
    /**
     * Invoked when the associated quit button is clicked.
     * <p>
     * Delegates to {@link #handleQuitAction()} to perform the
     * appropriate quit or restart operation.
     * </p>
     *
     * @param event the {@link ActionEvent} generated by the button click.
     */
	@Override
	public void actionPerformed(ActionEvent event) {
		handleQuitAction();
	}
	
    /**
     * Handles the quit action by either restarting the game or
     * closing the UI based on the {@link #shouldRestart} flag.
     * <p>
     * Any exceptions thrown during the process are caught and logged
     * at {@link java.util.logging.Level#SEVERE}.
     * </p>
     */
	private void handleQuitAction() {
	    try {
	        if (shouldRestart) {
	            controller.restart();
	        } else {
	            controller.closeUI();
	        }
	    } catch (Exception e) {
	        Logger.getLogger(QuitButton.class.getName())
	              .log(Level.SEVERE, "Quit action failed", e);
	    }
	}
}

/* 23 December 2024 - Create File
 * 31 January 2025 - Completed Testing and increased version
 * 17 February 2025 - Added option to restart the game
 * 5 March 2025 - Increased to v4.0
 * 15 March 2025 - Added the Game Initialiser
 * 21 March 2025 - Removed extraneous include
 * 8 April 2025 - Add the quit functionality
 * 9 April 2025 - Added the restart functionality
 * 21 April 2025 - Updated based on DeepSeek's recommendations.
 * 18 September 2025 - Updated code based on recommendations
 */
